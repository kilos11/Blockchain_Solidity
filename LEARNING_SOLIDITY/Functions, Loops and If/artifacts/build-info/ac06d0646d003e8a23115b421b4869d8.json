{
	"id": "ac06d0646d003e8a23115b421b4869d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol": {
				"content": "// Define the compiler version you would be using\r\npragma solidity ^0.8.19;\r\n\r\n// Start by creating a contract named Conditions\r\ncontract Conditions {\r\n    // State variable to store a number\r\n    uint public num;\r\n\r\n    /*\r\n        Name of the function is set.\r\n        It takes in an uint and sets the state variable num.\r\n        It is declared as a public function meaning\r\n        it can be called from within the contract and also externally.\r\n    */\r\n    function set(uint _num) public {\r\n        num = _num;\r\n    }\r\n\r\n    /*\r\n        Name of the function is get.\r\n        It returns the value of num.\r\n        It is declared as a view function meaning\r\n        that the function doesn't change the state of any variable.\r\n        view functions in solidity do not require gas.\r\n    */\r\n    function get() public view returns (uint) {\r\n        return num;\r\n    }\r\n\r\n    /*\r\n        Name of the function is foo.\r\n        It takes in an uint and returns an uint.\r\n        It compares the value of x using if/else\r\n    */\r\n    function foo(uint x) public returns (uint) {\r\n        if (x < 10) {\r\n            return 0;\r\n        } else if (x < 20) {\r\n            return 1;\r\n        } else {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    /*\r\n        Name of the function is loop.\r\n        It runs a loop till 10\r\n    */\r\n    function loop() public {\r\n        // for loop\r\n        for (uint i = 0; i < 10; i++) {\r\n            if (i == 3) {\r\n                // Skip to next iteration with continue\r\n                continue;\r\n            }\r\n            if (i == 5) {\r\n                // Exit loop with break\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol": {
				"Conditions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "foo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "num",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":129:1672  contract Conditions {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":129:1672  contract Conditions {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2fbebd38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e70b1dc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60fe47b1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1031:1233  function foo(uint x) public returns (uint) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":197:212  uint public num */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":462:522  function set(uint _num) public {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":798:869  function get() public view returns (uint) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1328:1665  function loop() public {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1031:1233  function foo(uint x) public returns (uint) {... */\n    tag_11:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1068:1072  uint */\n      0x00\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1093:1095  10 */\n      0x0a\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1089:1090  x */\n      dup3\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1089:1095  x < 10 */\n      lt\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1085:1226  if (x < 10) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1119:1120  0 */\n      0x00\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1112:1120  return 0 */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1085:1226  if (x < 10) {... */\n    tag_26:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1146:1148  20 */\n      0x14\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1142:1143  x */\n      dup3\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1142:1148  x < 20 */\n      lt\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1138:1226  if (x < 20) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1172:1173  1 */\n      0x01\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1165:1173  return 1 */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1138:1226  if (x < 20) {... */\n    tag_28:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1213:1214  2 */\n      0x02\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1206:1214  return 2 */\n      swap1\n      pop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1031:1233  function foo(uint x) public returns (uint) {... */\n    tag_25:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":197:212  uint public num */\n    tag_15:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":462:522  function set(uint _num) public {... */\n    tag_19:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":510:514  _num */\n      dup1\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":504:507  num */\n      0x00\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":504:514  num = _num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":462:522  function set(uint _num) public {... */\n      pop\n      jump\t// out\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":798:869  function get() public view returns (uint) {... */\n    tag_21:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":834:838  uint */\n      0x00\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":858:861  num */\n      dup1\n      sload\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":851:861  return num */\n      swap1\n      pop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":798:869  function get() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1328:1665  function loop() public {... */\n    tag_24:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1388:1394  uint i */\n      0x00\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1383:1658  for (uint i = 0; i < 10; i++) {... */\n    tag_33:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1404:1406  10 */\n      0x0a\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1400:1401  i */\n      dup2\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1400:1406  i < 10 */\n      lt\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1383:1658  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1437:1438  3 */\n      0x03\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1432:1433  i */\n      dup2\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1432:1438  i == 3 */\n      sub\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1428:1540  if (i == 3) {... */\n      iszero\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1516:1524  continue */\n      tag_35\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1428:1540  if (i == 3) {... */\n      jumpi\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1563:1564  5 */\n      0x05\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1558:1559  i */\n      dup2\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1558:1564  i == 5 */\n      sub\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1554:1647  if (i == 5) {... */\n      iszero\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1626:1631  break */\n      tag_34\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1554:1647  if (i == 5) {... */\n      jumpi\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1383:1658  for (uint i = 0; i < 10; i++) {... */\n    tag_35:\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1408:1411  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1383:1658  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_33)\n    tag_34:\n      pop\n        /* \"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":1328:1665  function loop() public {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_39:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_41:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_42:\n        /* \"#utility.yul\":490:514   */\n      tag_51\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_41\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_52:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_43:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_54\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_42\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_57\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":766:885   */\n    tag_56:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_58\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_43\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_44:\n        /* \"#utility.yul\":1112:1136   */\n      tag_60\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_41\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_62\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_44\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201fd3145d1530438de158370ac53eab5a5be2cd86fd337ee06587f455418b7a0d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061021d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632fbebd38146100595780634e70b1dc1461008957806360fe47b1146100a75780636d4ce63c146100c3578063a92100cb146100e1575b5f80fd5b610073600480360381019061006e9190610194565b6100eb565b60405161008091906101ce565b60405180910390f35b610091610119565b60405161009e91906101ce565b60405180910390f35b6100c160048036038101906100bc9190610194565b61011e565b005b6100cb610127565b6040516100d891906101ce565b60405180910390f35b6100e961012f565b005b5f600a8210156100fd575f9050610114565b601482101561010f5760019050610114565b600290505b919050565b5f5481565b805f8190555050565b5f8054905090565b5f5b600a81101561015a57600381031561014d57600581031561015a575b8080600101915050610131565b50565b5f80fd5b5f819050919050565b61017381610161565b811461017d575f80fd5b50565b5f8135905061018e8161016a565b92915050565b5f602082840312156101a9576101a861015d565b5b5f6101b684828501610180565b91505092915050565b6101c881610161565b82525050565b5f6020820190506101e15f8301846101bf565b9291505056fea26469706673582212201fd3145d1530438de158370ac53eab5a5be2cd86fd337ee06587f455418b7a0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0xFD JUMPI PUSH0 SWAP1 POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x14D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x15A JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x131 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E DUP2 PUSH2 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x15D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6 DUP5 DUP3 DUP6 ADD PUSH2 0x180 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C8 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD3 EQ TSTORE ISZERO ADDRESS NUMBER DUP14 0xE1 PC CALLDATACOPY EXP 0xC5 RETURNDATACOPY 0xAB GAS JUMPDEST 0xE2 0xCD DUP7 REVERT CALLER PUSH31 0xE06587F455418B7A0D64736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "129:1543:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_46": {
									"entryPoint": 235,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_21": {
									"entryPoint": 295,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@loop_74": {
									"entryPoint": 303,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@num_3": {
									"entryPoint": 281,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@set_13": {
									"entryPoint": 286,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1374:1",
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1090:53:1",
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nativeSrc": "1112:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nativeSrc": "1100:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nativeSrc": "1100:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:1",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:1",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nativeSrc": "1247:124:1",
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nativeSrc": "1257:26:1",
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nativeSrc": "1265:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nativeSrc": "1346:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nativeSrc": "1293:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nativeSrc": "1293:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:1",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:1",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632fbebd38146100595780634e70b1dc1461008957806360fe47b1146100a75780636d4ce63c146100c3578063a92100cb146100e1575b5f80fd5b610073600480360381019061006e9190610194565b6100eb565b60405161008091906101ce565b60405180910390f35b610091610119565b60405161009e91906101ce565b60405180910390f35b6100c160048036038101906100bc9190610194565b61011e565b005b6100cb610127565b6040516100d891906101ce565b60405180910390f35b6100e961012f565b005b5f600a8210156100fd575f9050610114565b601482101561010f5760019050610114565b600290505b919050565b5f5481565b805f8190555050565b5f8054905090565b5f5b600a81101561015a57600381031561014d57600581031561015a575b8080600101915050610131565b50565b5f80fd5b5f819050919050565b61017381610161565b811461017d575f80fd5b50565b5f8135905061018e8161016a565b92915050565b5f602082840312156101a9576101a861015d565b5b5f6101b684828501610180565b91505092915050565b6101c881610161565b82525050565b5f6020820190506101e15f8301846101bf565b9291505056fea26469706673582212201fd3145d1530438de158370ac53eab5a5be2cd86fd337ee06587f455418b7a0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0xFD JUMPI PUSH0 SWAP1 POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x14D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x15A JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x131 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E DUP2 PUSH2 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x15D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6 DUP5 DUP3 DUP6 ADD PUSH2 0x180 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C8 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD3 EQ TSTORE ISZERO ADDRESS NUMBER DUP14 0xE1 PC CALLDATACOPY EXP 0xC5 RETURNDATACOPY 0xAB GAS JUMPDEST 0xE2 0xCD DUP7 REVERT CALLER PUSH31 0xE06587F455418B7A0D64736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "129:1543:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;197:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:60;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;798:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1328:337;;;:::i;:::-;;1031:202;1068:4;1093:2;1089:1;:6;1085:141;;;1119:1;1112:8;;;;1085:141;1146:2;1142:1;:6;1138:88;;;1172:1;1165:8;;;;1138:88;1213:1;1206:8;;1031:202;;;;:::o;197:15::-;;;;:::o;462:60::-;510:4;504:3;:10;;;;462:60;:::o;798:71::-;834:4;858:3;;851:10;;798:71;:::o;1328:337::-;1388:6;1383:275;1404:2;1400:1;:6;1383:275;;;1437:1;1432;:6;1428:112;1516:8;1428:112;1563:1;1558;:6;1554:93;1626:5;1554:93;1383:275;1408:3;;;;;;;1383:275;;;;1328:337::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "108200",
								"executionCost": "151",
								"totalCost": "108351"
							},
							"external": {
								"foo(uint256)": "infinite",
								"get()": "2476",
								"loop()": "infinite",
								"num()": "2424",
								"set(uint256)": "22536"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 1672,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd3145d1530438de158370ac53eab5a5be2cd86fd337ee06587f455418b7a0d64736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "2FBEBD38"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "4E70B1DC"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "60FE47B1"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1031,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1031,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 197,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 462,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 462,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 798,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 798,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1206,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 462,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 798,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 851,
											"end": 861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1428,
											"end": 1540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1554,
											"end": 1647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo(uint256)": "2fbebd38",
							"get()": "6d4ce63c",
							"loop()": "a92100cb",
							"num()": "4e70b1dc",
							"set(uint256)": "60fe47b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":\"Conditions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\":{\"keccak256\":\"0x662dfe1447d528fee05f6b451b51f942d7ce40c7a53a5533ea7b33ace2d4a120\",\"urls\":[\"bzz-raw://3fe679e1b503ad20c4ee19e972d468160cdf7a774bacc488d6a6f0a2f1270647\",\"dweb:/ipfs/QmRE2WT11CSqYbP6tqnLSgbJuTkmRq9ZEW2KbkrZF7Ge81\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "LEARNING_SOLIDITY/Functions, Loops and If/Else.sol:Conditions",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> LEARNING_SOLIDITY/Functions, Loops and If/Else.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "LEARNING_SOLIDITY/Functions, Loops and If/Else.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> LEARNING_SOLIDITY/Functions, Loops and If/Else.sol:35:5:\n   |\n35 |     function foo(uint x) public returns (uint) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1233,
					"file": "LEARNING_SOLIDITY/Functions, Loops and If/Else.sol",
					"start": 1031
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> LEARNING_SOLIDITY/Functions, Loops and If/Else.sol:49:5:\n   |\n49 |     function loop() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1665,
					"file": "LEARNING_SOLIDITY/Functions, Loops and If/Else.sol",
					"start": 1328
				},
				"type": "Warning"
			}
		],
		"sources": {
			"LEARNING_SOLIDITY/Functions, Loops and If/Else.sol": {
				"ast": {
					"absolutePath": "LEARNING_SOLIDITY/Functions, Loops and If/Else.sol",
					"exportedSymbols": {
						"Conditions": [
							75
						]
					},
					"id": 76,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "51:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Conditions",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "Conditions",
							"nameLocation": "138:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4e70b1dc",
									"id": 3,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "209:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 75,
									"src": "197:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "197:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "493:29:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "504:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "510:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "504:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "504:10:0"
											}
										]
									},
									"functionSelector": "60fe47b1",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "471:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:11:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:0"
									},
									"scope": 75,
									"src": "462:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "840:29:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "858:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 17,
												"id": 19,
												"nodeType": "Return",
												"src": "851:10:0"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "807:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "834:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "834:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:6:0"
									},
									"scope": 75,
									"src": "798:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1074:159:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1089:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1142:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1146:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "1142:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 42,
														"nodeType": "Block",
														"src": "1191:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1213:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 27,
																"id": 41,
																"nodeType": "Return",
																"src": "1206:8:0"
															}
														]
													},
													"id": 43,
													"nodeType": "IfStatement",
													"src": "1138:88:0",
													"trueBody": {
														"id": 39,
														"nodeType": "Block",
														"src": "1150:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1172:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 27,
																"id": 38,
																"nodeType": "Return",
																"src": "1165:8:0"
															}
														]
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1085:141:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "1097:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1119:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 27,
															"id": 32,
															"nodeType": "Return",
															"src": "1112:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2fbebd38",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "1040:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1044:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:8:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1068:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1068:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:6:0"
									},
									"scope": 75,
									"src": "1031:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1351:314:0",
										"statements": [
											{
												"body": {
													"id": 71,
													"nodeType": "Block",
													"src": "1413:245:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 59,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1432:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "1432:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 64,
															"nodeType": "IfStatement",
															"src": "1428:112:0",
															"trueBody": {
																"id": 63,
																"nodeType": "Block",
																"src": "1440:100:0",
																"statements": [
																	{
																		"id": 62,
																		"nodeType": "Continue",
																		"src": "1516:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 65,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1563:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "1558:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 70,
															"nodeType": "IfStatement",
															"src": "1554:93:0",
															"trueBody": {
																"id": 69,
																"nodeType": "Block",
																"src": "1566:81:0",
																"statements": [
																	{
																		"id": 68,
																		"nodeType": "Break",
																		"src": "1626:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1400:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1404:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 72,
												"initializationExpression": {
													"assignments": [
														50
													],
													"declarations": [
														{
															"constant": false,
															"id": 50,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1393:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 72,
															"src": "1388:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 49,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1388:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 52,
													"initialValue": {
														"hexValue": "30",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1397:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1388:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1408:3:0",
														"subExpression": {
															"id": 56,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1408:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 58,
													"nodeType": "ExpressionStatement",
													"src": "1408:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1383:275:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "1337:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1351:0:0"
									},
									"scope": 75,
									"src": "1328:337:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 76,
							"src": "129:1543:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "51:1621:0"
				},
				"id": 0
			}
		}
	}
}